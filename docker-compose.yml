services:
    app:
        build: .
        container_name: url-shortener-app
        ports:
            - "${PORT}:3000"
        env_file:
            - .env
        volumes:
            - ./uploads:/app/uploads # persist uploaded files
            - ./:/app # bind mount whole project for hot reload
            - /app/node_modules # preserve container's node_modules
        restart: unless-stopped
        command: npm run dev
        networks:
            - app_network
        depends_on:
            - mongo
            - redis

    mongo:
        image: mongo:7
        container_name: url-shortener-mongo
        restart: unless-stopped
        env_file:
            - .env
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER_NAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
        ports:
            - "${MONGO_PORT}:27017" # exposed for Compass
        volumes:
            - ./mongo_data:/data/db
            - ./logs/mongo:/var/log/mongodb
        command: mongod --quiet --logpath /var/log/mongodb/mongod.log --logappend
        networks:
            - app_network

    redis:
        image: redis:7
        container_name: url-shortener-redis
        restart: unless-stopped
        command: redis-server --appendonly yes
        ports:
            - "${REDIS_PORT}:6379" # exposed for redis-cli
        volumes:
            - ./redis_data:/data
        networks:
            - app_network

volumes:
    mongo_data:
    redis_data:

networks:
    app_network:
        driver: bridge
